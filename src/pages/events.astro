---
import Layout from '@/components/Layout.astro';
import { Separator } from '@/components/ui/separator';

// all time are in british time, including daylight savings time

const events: {
  name: string;
  description?: string;
  location?: string;
  startDate?: Date;
  endDate?: Date;
}[] = [
  {
    name: 'Arts & Crafts',
    description: 'Bring your own arts and crafts.',
    location: 'BLN SR18',
    startDate: new Date('2025-10-25T17:00:00.000Z'),
    endDate: new Date('2025-10-25T19:00:00.000Z'),
  }, {
    name: 'Halloween Party',
    location: 'BLN SR2',
    startDate: new Date('2025-10-31T18:00:00.000Z'),
    endDate: new Date('2025-10-31T21:00:00.000Z'),
  }, {
    name: 'Karaoke',
    description: 'Karaoke night.',
    location: 'MFL',
    startDate: new Date('2025-11-08T18:00:00.000Z'),
    endDate: new Date('2025-11-08T20:00:00.000Z'),
  }, {
    name: 'Presentation',
    description: 'Give a presentation on a topic of your choice!',
    location: 'Cavendish Colloquium',
    startDate: new Date('2025-11-22T18:00:00.000Z'),
    endDate: new Date('2025-11-22T20:00:00.000Z'),
  }, {
    name: 'Christmas Party/Winter Ball',
    description: 'End-of-term Christmas party / winter ball.',
    location: 'BLN SR20',
    startDate: new Date('2025-11-29T18:00:00.000Z'),
    endDate: new Date('2025-11-29T22:00:00.000Z'),
  }, {
    name: 'Christmas Dinner',
    description: 'Details to be confirmed.',
    startDate: new Date('2025-12-12T00:00:00.000Z'),
    endDate: new Date('2025-12-12T00:00:00.000Z'),
  }, {
    name: 'Internal Showcase',
    description: 'A chance for our members to showcase their skills with a performance',
    location: 'MFL',
    startDate: new Date('2025-12-08T18:00:00.000Z'),
    endDate: new Date('2025-12-08T20:00:00.000Z'),
  }
].filter(({ endDate }) => {
  const now = new Date();
  return (!endDate || endDate > now);
});

const options = {
  month: 'long',
  day: 'numeric',
  hour: '2-digit',
  minute: '2-digit',
  hour12: false, // Use 24-hour format
  timeZone: 'Europe/London',
} satisfies Intl.DateTimeFormatOptions;

const formatter = new Intl.DateTimeFormat('en-UK', options);
---

<Layout
  title="Events"
  description="Events for the Lancaster University Magic and Circus Society (LUMACS)"
>
  <h1 class="text-2xl font-bold text-center">Events</h1>
  <p class="text-center max-w-2xl">
    These are the events and socials that we are either running or will be at.
  </p>
  {
    // sort by start date, if no start date put at end and filter out events that are more than a day in the past
    events.length < 1
      ? 'More events coming soon :)'
      : events
          .sort((a, b) => {
            if (a.startDate && b.startDate) {
              return a.startDate.getTime() - b.startDate.getTime();
            }
            if (a.startDate && !b.startDate) {
              return -1;
            }
            if (b.startDate) {
              return 1;
            }
            return 0;
          })
          .filter(({ startDate }) => startDate)
          .map(({ name, description, location, startDate, endDate }) => (
            <div class="flex flex-col items-center max-w-2xl text-center">
              <span class="font-bold text-xl">{name}</span>
              <span>{description}</span>
              <span class="text-sm text-center text-muted-foreground">
                {location}
              </span>
              <span class="text-sm text-center text-muted-foreground">
                {formatter.format(startDate)}{' '}
                {endDate && `- ${formatter.format(endDate)}`}
              </span>
            </div>
          ))
          .reduce(
            (acc, cur) => [...acc, <Separator className="my-2" />, cur],
            []
          )
  }
</Layout>
